// Flashsale means a time-limited promotion that is scheduled to start and end at specific times.
// Voucher same as Flashsale, but not having scheduled routine

enum PromotionType {
  Discount
  Bundle
  BuyXGetY
  Cashback

  @@map("type")
  @@schema("promotion")
}

enum PromotionRefType {
  All // All products, the entire product catalog is being promoted
  ProductSpu // Product SPU, the specific product that is being promoted
  ProductSku // Product SKU, the specific SKU of the product that is being promoted
  Category // Category, the category of products that are being promoted
  Brand // Brand, the brand of products that are being promoted

  @@map("ref_type")
  @@schema("promotion")
}

model Promotion {
  id       BigInt           @id @default(autoincrement())
  code     String           @unique
  owner_id BigInt? // null means system promotion
  ref_type PromotionRefType // Type of reference
  ref_id   BigInt? // Reference id, e.g. product id, category id | null when ref_type is All

  type        PromotionType // Type of promotion, e.g: discount (voucher, flashsale, ...), bundle, buyXGetY, cashback
  title       String // Title of the promotion
  description String? // Description of the promotion
  is_active   Boolean       @default(true)

  date_started DateTime  @default(now()) @db.Timestamptz(3) // When the promotion becomes active (if also having a schedule_start, then the later one applies)
  date_ended   DateTime? @db.Timestamptz(3)

  // Flashsale specific fields
  schedule_tz       String? // Timezone for the schedule, e.g., "America/New_York"
  schedule_start    DateTime? @db.Timestamptz(3) // (e.g., "0 9 * * 1" for every Monday 9AM)
  schedule_duration Int? // in minutes, e.g., 60 for 1 hour

  date_created DateTime @default(now()) @db.Timestamptz(3)
  date_updated DateTime @updatedAt @db.Timestamptz(3)

  vendor    Vendor?             @relation(fields: [owner_id], references: [id], onUpdate: Cascade, onDelete: SetNull)
  discounts PromotionDiscount[]

  @@map("base")
  @@schema("promotion")
}

model PromotionDiscount {
  id BigInt @id

  min_spend        BigInt  @default(0) // Minimum spend to apply this sale, 0 means applied immediately
  max_discount     BigInt  @default(0) // Maximum discount amount (fixed price), 0 means no limit
  discount_percent Int? // either discount_percent or discount_price
  discount_price   BigInt?

  promotion Promotion @relation(fields: [id], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("discount")
  @@schema("promotion")
}
